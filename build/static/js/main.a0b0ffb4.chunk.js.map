{"version":3,"sources":["components/Title.js","components/Button.js","components/ListItem.js","components/Player.js","components/SearchBar.js","components/Main.js","App.js","index.js"],"names":["Title","heading","className","Button","text","click","classCSS","onClick","ListItem","name","secondaryInfo","thumbnail","artists","map","join","src","alt","Player","title","audioBlobUri","Song","img","uri","this","React","useState","songQueue","setSongQueue","currentSong","setCurrentSong","indexCurrent","setIndexCurrent","toggle","setToggle","audioPlayer","document","getElementById","musicSeeker","querySelector","addEventListener","e","keyCode","target","body","preventDefault","toggleClick","useEffect","addedSong","load","play","innerHTML","style","display","currentTime","value","msTos","max","Math","floor","duration","length","nextSong","durationSong","minutes","seconds","secStr","pause","i","background","type","autoPlay","id","preload","onEnded","song","SearchBar","inputText","createRef","spotifyResults","setSpotifyResults","setValue","res","setRes","readable","setReadable","setName","image","setImage","chunks","getYoutubeAudio","songName","providers","a","artistStr","query","encodeURIComponent","fetch","then","r","getReader","reader","read","done","push","opacity","setTimeout","blob","Blob","URL","createObjectURL","trim","replace","json","jso","spotify","tracks","items","ref","placeholder","spellCheck","onKeyPress","event","key","current","album","images","url","Main","App","ReactDOM","render","StrictMode"],"mappings":"qJAQeA,EARD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACb,OACI,qBAAKC,UAAU,QAAf,SACI,6BAAKD,O,8BCGFE,EANA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3B,OACI,wBAAQJ,UAAWI,EAAUC,QAASF,EAAtC,SAA8CD,KCUvCI,EAZE,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,UAAWN,EAAY,EAAZA,MAC5CO,EAAUF,EAAcG,KAAI,SAAAH,GAAa,OAAIA,EAAcD,QAAMK,KAAK,MAC1E,OACI,sBAAKZ,UAAU,WAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBO,IACxB,sBAAMP,UAAU,gBAAhB,SAAiCU,IACjC,qBAAKV,UAAU,MAAMK,QAASF,EAA9B,SAAqC,mBAAGH,UAAU,wBAClD,qBAAKa,IAAKJ,EAAWK,IAAKP,Q,OCgHvBQ,EAtHA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOP,EAA8B,EAA9BA,UAAWQ,EAAmB,EAAnBA,aAChC,SAASC,EAAKX,EAAMY,EAAKC,GACrBC,KAAKd,KAAOA,EACZc,KAAKF,IAAMA,EACXE,KAAKD,IAAMA,EAJoC,MAOnBE,IAAMC,SAAS,IAPI,mBAO9CC,EAP8C,KAOnCC,EAPmC,OAQfH,IAAMC,SAAS,MARA,mBAQ9CG,EAR8C,KAQjCC,EARiC,OASbL,IAAMC,UAAU,GATH,mBAS9CK,EAT8C,KAShCC,EATgC,OAUzBP,IAAMC,UAAS,GAVU,mBAU9CO,EAV8C,KAUtCC,EAVsC,KAW/CC,EAAcC,SAASC,eAAe,eACtCC,EAAcF,SAASG,cAAc,gBAEzCH,SAASI,iBAAiB,WAAW,SAACC,GACjB,KAAdA,EAAEC,UACED,EAAEE,SAAWP,SAASQ,MAAMH,EAAEI,iBAC9BJ,EAAEE,SAAWP,SAASG,cAAc,qBAAqBO,QAIpErB,IAAMsB,WAAU,WACZ,GAAG3B,EAAa,CACZ,IAAM4B,EAAY,IAAI3B,EAAKF,EAAOP,EAAWQ,GAC7CQ,GAAa,SAAAD,GAAS,4BAAQA,GAAR,CAAmBqB,UAE9C,CAAC5B,IAEJK,IAAMsB,WAAU,WACTlB,IACCM,EAAYnB,IAAMa,EAAYN,IAC9BY,EAAYc,OACZd,EAAYe,OACZd,SAASG,cAAc,cAAcY,UAAYtB,EAAYnB,KAC7D0B,SAASG,cAAc,eAAevB,IAAMa,EAAYP,IACxDgB,EAAYc,MAAMC,QAAU,QAC5BjB,SAASG,cAAc,gBAAgBa,MAAMC,QAAU,QACvDjB,SAASG,cAAc,cAAca,MAAMC,QAAU,QACrDf,EAAYE,iBAAiB,UAAU,WACnCL,EAAYmB,YAAchB,EAAYiB,MACtCnB,SAASG,cAAc,gBAAgBY,UAAYK,EAAMlB,EAAYiB,UAEzEpB,EAAYK,iBAAiB,kBAAkB,WAC3CF,EAAYmB,IAAMC,KAAKC,MAAMxB,EAAYyB,UACzCxB,SAASG,cAAc,cAAcY,UAAYK,EAAMrB,EAAYyB,aAEvEzB,EAAYK,iBAAiB,cAAc,WACvCF,EAAYiB,MAAQG,KAAKC,MAAMxB,EAAYmB,aAC3ClB,SAASG,cAAc,gBAAgBY,UAAYK,EAAMrB,EAAYmB,gBAEzEpB,GAAU,MAEf,CAACL,IAEJJ,IAAMsB,WAAU,WACW,GAApBpB,EAAUkC,QAAaC,MAC3B,CAACnC,IAEJ,IAAMmC,EAAW,WACV/B,IAAiBJ,EAAUkC,OAAS,EAAG7B,EAAgBD,EAAe,GACpEO,EAAYiB,MAAQ,GAQvBC,EAAQ,SAACO,GACX,IAAMC,EAAUN,KAAKC,MAAMI,EAAe,IACpCE,EAAUP,KAAKC,MAAMI,EAAe,IACpCG,EAASD,EAAU,GAAV,WAAmBA,GAAYA,EAC9C,MAAM,GAAN,OAAUD,EAAV,YAAqBE,IAGnBpB,EAAc,WACb1B,IACIa,EAAQE,EAAYe,OAClBf,EAAYgC,QACjBjC,GAAWD,KAYnB,OARAR,IAAMsB,WAAU,WACZjB,EAAeH,EAAUI,IACzB,IAAI,IAAIqC,EAAI,EAAGA,EAAIzC,EAAUkC,OAAQO,IACXhC,SAASC,eAAe+B,GAAGhB,MAAMiB,WAApDD,GAAKrC,EAA4D,qBACjB,SAExD,CAACA,IAGA,sBAAK5B,UAAU,SAAf,UACI,wBACA,sBAAMA,UAAU,cAEhB,mBAAGA,UAAU,8CAA8CK,QAjClD,WACO,IAAjBuB,EAAoBC,EAAgBD,EAAe,GACjDO,EAAYiB,MAAQ,KAgCrB,mBAAGpD,UAAS,gCAA2B8B,EAAS,OAAS,SAAWzB,QAAS,kBAAMsC,OACnF,mBAAG3C,UAAU,2CAA2CK,QAASsD,IAEjE,sBAAM3D,UAAU,cAAciD,MAAO,CAACC,QAAS,QAA/C,kBACA,uBAAOiB,KAAK,QAAQnE,UAAU,cAAciD,MAAO,CAACC,QAAS,UAC7D,sBAAMlD,UAAU,YAAYiD,MAAO,CAACC,QAAS,QAA7C,kBACA,uBAAOkB,UAAQ,EAACC,GAAG,cAAcC,QAAQ,WAAWC,QAASZ,IAE7D,oBAAG3D,UAAU,oCAAb,UACI,mBAAGA,UAAU,iBACb,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACKwB,EAAUb,KAAI,SAAC6D,EAAMP,GAAP,OAAa,qBAAKI,GAAIJ,EAAT,SAAqBO,EAAKjE,MAAT0D,QAEjD,sBAAMjE,UAAU,0BCvCrByE,EApEG,WACd,IAAIC,EAAYpD,IAAMqD,YADF,EAEsBrD,IAAMC,SAAS,MAFrC,mBAEfqD,EAFe,KAECC,EAFD,OAGIvD,IAAMC,SAAS,MAHnB,mBAGf6B,EAHe,KAGR0B,EAHQ,OAKAxD,IAAMC,SAAS,MALf,mBAKfwD,EALe,KAKVC,EALU,OAMU1D,IAAMC,SAAS,MANzB,mBAMf0D,EANe,KAMLC,EANK,OAOE5D,IAAMC,SAAS,MAPjB,mBAOfhB,EAPe,KAOT4E,EAPS,OAQI7D,IAAMC,SAAS,MARnB,mBAQf6D,EARe,KAQRC,EARQ,KAShBC,EAAS,GAEPC,EAAe,uCAAG,WAAMC,EAAUC,EAAWvC,GAA3B,iBAAAwC,EAAA,sDAChBC,EAAYF,EAAU9E,KAAI,SAAA8E,GAAS,OAAIA,EAAUlF,QAAMK,KAAK,MAC5DgF,EAAQC,mBAAmB,GAAD,OAAKL,EAAL,YAAiBG,IAE5CpF,IAAI,UAAQiF,EAAR,aAAqBG,KACxBL,EAAS,GACTQ,MAAM,mBAAD,OAAoBF,IACxBG,MAAK,SAAAC,GAAC,OAAIA,EAAEvD,KAAKwD,eACjBF,MAAK,SAAAC,GAAC,OAAId,EAAYc,MAEvBb,EAAQ,GAAD,OAAIK,EAAJ,aAAiBG,IACxBN,EAASnC,IAXO,2CAAH,0DA2CrB,OA5BA5B,IAAMsB,WAAU,WACZ,GAAGqC,EAAS,EAER,SAASiB,IACLjB,EAASkB,OAAOJ,MAAK,YAAsB,IAAnBK,EAAkB,EAAlBA,KAAMhD,EAAY,EAAZA,MAC1B,IAAGgD,EAQH,OADAd,EAAOe,KAAKjD,GACL8C,IAPHjE,SAASG,cAAc,UAAUa,MAAMqD,QAAU,EACjDC,YAAW,kBAAMtE,SAASG,cAAc,UAAUa,MAAMqD,QAAU,IAAG,KACrE,IAAIE,EAAO,IAAIC,KAAKnB,EAAQ,CAAEnB,KAAM,cACpCa,EAAO0B,IAAIC,gBAAgBH,OAPvCN,MAeL,CAACjB,IAEJ3D,IAAMsB,WAAU,WACZ,GAAGQ,EAAM,CACL,IAAIwC,EAAQxC,EAAMwD,OAAOC,QAAQ,MAAO,KACxCf,MAAM,gBAAD,OAAiBF,IACrBG,MAAK,SAAAhB,GAAG,OAAIA,EAAI+B,UAChBf,MAAK,SAACgB,GAAD,OAASlC,EAAkBkC,EAAIC,QAAQvE,KAAKwE,OAAOC,aAE9D,CAAC9D,IAGA,sBAAKpD,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,2CACA,sBAAKA,UAAU,YAAf,UACI,uBAAOmH,IAAKzC,EAAWP,KAAK,OAAOiD,YAAY,WAAWC,WAAW,QAAQC,WAAY,SAACC,GAAD,MAAyB,UAAdA,EAAMC,IAAkB1C,EAASJ,EAAU+C,QAAQrE,OAAS,QAChK,cAAC,EAAD,CAAQlD,KAAK,KAAKC,MAAO,kBAAM2E,EAASJ,EAAU+C,QAAQrE,QAAQhD,SAAS,iBAC3E,6BAAOwE,EACPA,EAAejE,KAAI,SAACiE,GAAD,OAAoB,cAAC,EAAD,CAAkCrE,KAAMqE,EAAerE,KAAMC,cAAeoE,EAAelE,QAASD,UAAWmE,EAAe8C,MAAMC,OAAO,GAAGC,IAAKzH,MAAO,kBAAMoF,EAAgBX,EAAerE,KAAMqE,EAAelE,QAASkE,EAAe8C,MAAMC,OAAO,GAAGC,OAA7OhD,EAAeP,OAD5C,yDAG7B,cAAC,EAAD,CAAQpD,aAAc8D,EAAK/D,MAAOT,EAAME,UAAW2E,QCxDhDyC,EATF,WACX,OACE,sBAAK7H,UAAU,OAAf,UACI,cAAC,EAAD,CAAOD,QAAQ,cACf,cAAC,EAAD,QCGO+H,EARH,WACV,OACE,qBAAK9H,UAAU,MAAf,SACE,cAAC,EAAD,OCDN+H,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhG,SAASC,eAAe,W","file":"static/js/main.a0b0ffb4.chunk.js","sourcesContent":["const Title = ({ heading }) => {\r\n    return(\r\n        <div className=\"title\">\r\n            <h1>{heading}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","const Button = ({ text, click, classCSS }) => {\r\n    return(\r\n        <button className={classCSS} onClick={click}>{text}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","const ListItem = ({ name, secondaryInfo, thumbnail, click }) => {\r\n    let artists = secondaryInfo.map(secondaryInfo => secondaryInfo.name).join(', ');\r\n    return(\r\n        <div className='ListItem'>\r\n            <span className='name'>{name}</span>\r\n            <span className='secondaryInfo'>{artists}</span>\r\n            <div className='add' onClick={click}><i className=\"fas fa-2x fa-plus\"></i></div>\r\n            <img src={thumbnail} alt={name}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nconst Player = ({ title, thumbnail, audioBlobUri }) => {\r\n    function Song(name, img, uri){\r\n        this.name = name;\r\n        this.img = img;\r\n        this.uri = uri;\r\n    }\r\n\r\n    let [songQueue, setSongQueue] = React.useState([]);\r\n    let [currentSong, setCurrentSong] = React.useState(null);\r\n    let [indexCurrent, setIndexCurrent] = React.useState(-1);\r\n    let [toggle, setToggle] = React.useState(false);\r\n    let audioPlayer = document.getElementById('audioPlayer');\r\n    let musicSeeker = document.querySelector('.musicSeeker');\r\n    \r\n    document.addEventListener('keydown', (e) =>{\r\n        if(e.keyCode === 32){\r\n            if(e.target === document.body) e.preventDefault();\r\n            if(e.target !== document.querySelector('input[type=text]')) toggleClick();\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if(audioBlobUri){\r\n            const addedSong = new Song(title, thumbnail, audioBlobUri);\r\n            setSongQueue(songQueue => [...songQueue, addedSong]);\r\n        }\r\n    }, [audioBlobUri]);\r\n\r\n    React.useEffect(() => { \r\n        if(currentSong){\r\n            audioPlayer.src = currentSong.uri;\r\n            audioPlayer.load();\r\n            audioPlayer.play();\r\n            document.querySelector('.songTitle').innerHTML = currentSong.name;\r\n            document.querySelector('.Player img').src = currentSong.img;\r\n            musicSeeker.style.display = 'block';\r\n            document.querySelector('.currentTime').style.display = 'block';\r\n            document.querySelector('.totalTime').style.display = 'block';\r\n            musicSeeker.addEventListener('change', () => {\r\n                audioPlayer.currentTime = musicSeeker.value;\r\n                document.querySelector('.currentTime').innerHTML = msTos(musicSeeker.value);\r\n            });\r\n            audioPlayer.addEventListener('loadedmetadata', () => {\r\n                musicSeeker.max = Math.floor(audioPlayer.duration);\r\n                document.querySelector('.totalTime').innerHTML = msTos(audioPlayer.duration);\r\n            });\r\n            audioPlayer.addEventListener('timeupdate', () => {\r\n                musicSeeker.value = Math.floor(audioPlayer.currentTime);\r\n                document.querySelector('.currentTime').innerHTML = msTos(audioPlayer.currentTime);\r\n            });\r\n            setToggle(false);\r\n        }\r\n    }, [currentSong]);\r\n\r\n    React.useEffect(() => {\r\n        if(songQueue.length == 1) nextSong();\r\n    }, [songQueue]);\r\n\r\n    const nextSong = () => {\r\n        if(indexCurrent !== songQueue.length - 1) setIndexCurrent(indexCurrent + 1);\r\n        else musicSeeker.value = 0;\r\n    }\r\n\r\n    const prevSong = () => {\r\n        if(indexCurrent !== 0) setIndexCurrent(indexCurrent - 1);\r\n        else musicSeeker.value = 0;\r\n    }\r\n\r\n    const msTos = (durationSong) => {\r\n        const minutes = Math.floor(durationSong / 60);\r\n        const seconds = Math.floor(durationSong % 60);\r\n        const secStr = seconds < 10 ? `0${seconds}` : seconds;\r\n        return `${minutes}:${secStr}`;\r\n    }\r\n\r\n    const toggleClick = () => {\r\n        if(audioBlobUri){\r\n            if(toggle) audioPlayer.play();\r\n            else audioPlayer.pause();\r\n            setToggle(!toggle);\r\n        }\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        setCurrentSong(songQueue[indexCurrent]);\r\n        for(var i = 0; i < songQueue.length; i++){\r\n            if(i == indexCurrent) document.getElementById(i).style.background = 'hsl(160, 80%, 40%)';\r\n            else document.getElementById(i).style.background = 'none';\r\n        }\r\n    }, [indexCurrent]);\r\n\r\n    return(\r\n        <div className='Player'>\r\n            <img/>\r\n            <span className='songTitle'></span>\r\n\r\n            <i className='previousIcon fas fa-2x fa-angle-double-left' onClick={prevSong}></i>\r\n            <i className={`playIcon fas fa-2x fa-${toggle ? 'play' : 'pause'}`} onClick={() => toggleClick()}></i>\r\n            <i className='nextIcon fas fa-2x fa-angle-double-right' onClick={nextSong}></i>\r\n\r\n            <span className='currentTime' style={{display: \"none\"}}>0:00</span>\r\n            <input type=\"range\" className='musicSeeker' style={{display: \"none\"}}/>\r\n            <span className='totalTime' style={{display: \"none\"}}>0:00</span>\r\n            <audio autoPlay id='audioPlayer' preload='metadata' onEnded={nextSong}></audio>\r\n\r\n            <i className='queue fas fa-2x fa-clipboard-list'>\r\n                <i className=\"fas fa-times\"></i>\r\n                <div className='hip'>\r\n                    <div className='songQueue'>\r\n                        {songQueue.map((song, i) => <div id={i} key={i}>{song.name}</div>)}\r\n                    </div>\r\n                    <span className='bottomArrow'></span>\r\n                </div>\r\n            </i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport Button from './Button';\r\nimport ListItem from './ListItem';\r\nimport Player from './Player';\r\n\r\nconst SearchBar = () => {\r\n    let inputText = React.createRef();\r\n    let [spotifyResults, setSpotifyResults] = React.useState(null);\r\n    let [value, setValue] = React.useState(null);\r\n\r\n    let [res, setRes] = React.useState(null);\r\n    let [readable, setReadable] = React.useState(null);\r\n    let [name, setName] = React.useState(null);\r\n    let [image, setImage] = React.useState(null);\r\n    let chunks = [];\r\n\r\n    const getYoutubeAudio = async(songName, providers, display) => {\r\n        let artistStr = providers.map(providers => providers.name).join(', ');\r\n        let query = encodeURIComponent((`${songName} ${artistStr}`));\r\n\r\n        if(name !== `${songName}- ${artistStr}`){\r\n            chunks = [];\r\n            fetch(`/youtube?search=${query}`)\r\n            .then(r => r.body.getReader())\r\n            .then(r => setReadable(r));\r\n    \r\n            setName(`${songName}- ${artistStr}`);\r\n            setImage(display);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(readable){\r\n            reader();\r\n            function reader() {\r\n                readable.read().then(({ done, value }) => {\r\n                    if(done){\r\n                        document.querySelector('.notif').style.opacity = 1;\r\n                        setTimeout(() => document.querySelector('.notif').style.opacity = 0, 2000);\r\n                        var blob = new Blob(chunks, { type: 'video/mp4' });\r\n                        setRes(URL.createObjectURL(blob));\r\n                        return;\r\n                    }\r\n                    chunks.push(value);\r\n                    return reader();\r\n                });\r\n            }\r\n        }\r\n    }, [readable]);\r\n\r\n    React.useEffect(() => {\r\n        if(value){\r\n            let query = value.trim().replace(/\\s/g, '+');\r\n            fetch(`/song?search=${query}`)\r\n            .then(res => res.json())\r\n            .then((jso) => setSpotifyResults(jso.spotify.body.tracks.items));\r\n        }\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className='mainBody'>\r\n            <div className='notif'>Song has been added to queue.</div>\r\n            <div className='SearchBar'>\r\n                <input ref={inputText} type='text' placeholder='Search..' spellCheck='false' onKeyPress={(event) => event.key === 'Enter' ? setValue(inputText.current.value) : null}/>\r\n                <Button text='Go' click={() => setValue(inputText.current.value)} classCSS='searchButton'></Button>\r\n                <ul>{(!spotifyResults) ? \"Search for your tracks using the above search-bar\" :\r\n                spotifyResults.map((spotifyResults) => <ListItem key={spotifyResults.id} name={spotifyResults.name} secondaryInfo={spotifyResults.artists} thumbnail={spotifyResults.album.images[1].url} click={() => getYoutubeAudio(spotifyResults.name, spotifyResults.artists, spotifyResults.album.images[1].url)}/>)}</ul>\r\n            </div>\r\n            <Player audioBlobUri={res} title={name} thumbnail={image}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import Title from './Title';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className='Main'>\r\n        <Title heading='skookshie'/>      \r\n        <SearchBar></SearchBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import Main from './components/Main';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n      <Main></Main>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}